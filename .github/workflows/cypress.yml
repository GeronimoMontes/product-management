name: Cypress Tests
on:
  push:
    branches:
      - master # Cambia según la rama en la que quieres ejecutar las pruebas

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2] # Ejecutar pruebas en 2 contenedores paralelos

    steps:
      - name: Checkout Frontend
        uses: actions/checkout@v4

      - name: Checkout Backend
        uses: actions/checkout@v4
        with:
          repository: GeronimoMontes/api-product-management # Repositorio del backend
          path: backend # Ruta donde se clonará el backend

      - name: Setup and Start Backend
        run: |
          cd backend
          npm install  # Instala dependencias del backend
          npm run build  # Compila el backend (ajusta según tu script de build)
          npm run start:dev &  # Inicia el backend en modo desarrollo
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          CI: true

      - name: Wait for Backend to be ready
        uses: jakejarvis/wait-action@v1
        with:
          url: "http://localhost:3000" # Ajusta según el puerto del backend
          timeout: "180"

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}

      - name: Cache Cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-cache-${{ runner.os }}

      - name: Install Frontend dependencies
        run: npm install # Instala dependencias del frontend

      - name: Start Frontend
        run: npm start -- --port 4200 & # Inicia el frontend en segundo plano
        env:
          CI: true

      - name: Wait for Frontend to be ready
        uses: jakejarvis/wait-action@v1
        with:
          url: "http://localhost:4200" # Ajusta según el puerto del frontend
          timeout: "180"

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          wait-on: "http://localhost:4200" # Ajusta según el puerto del frontend
          wait-on-timeout: 180
          record: true # Opcional: graba los resultados en Cypress Dashboard
          parallel: true # Ejecuta pruebas en paralelo
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output server logs if failed
        if: failure()
        run: cat backend/logs/server.log # Ajusta según la ubicación del archivo de logs del backend
