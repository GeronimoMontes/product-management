name: Cypress Tests and Build Image

on:
  push:
    branches: [main]

jobs:
  cypress-and-build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Step to setup and start your backend (similar to your previous Cypress setup)
      - name: Setup and Start Backend
        run: |
          cd backend
          npm install
          npm run build
          npm run start:dev &
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          CI: true

      # Wait for Backend to be ready
      - name: Wait for Backend
        uses: jakejarvis/wait-action@v1
        with:
          url: 'http://localhost:3000'
          timeout: '180'

      # Step to setup and start your frontend (similar to your previous Cypress setup)
      - name: Install and Start Frontend
        run: |
          npm install
          npm start -- --port 4200 &
        env:
          CI: true

      # Wait for Frontend to be ready
      - name: Wait for Frontend
        uses: jakejarvis/wait-action@v1
        with:
          url: 'http://localhost:4200'
          timeout: '180'

      # Run Cypress tests
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          wait-on: 'http://localhost:4200'
          wait-on-timeout: 180
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build and push image
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        id: push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Wait for image to be pushed
      - name: Wait for image to be pushed
        uses: jakejarvis/wait-action@v1
        with:
          url: 'https://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}'
          timeout: '300'

      # Attest image
      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
